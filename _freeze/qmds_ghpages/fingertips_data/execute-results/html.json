{
  "hash": "0d8fe1154b3f448cbd7acca05616ba8d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"fingertips_data\"\nformat: html\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\noptions(repos = c(CRAN = \"https://cloud.r-project.org\"))\nif (!require(\"remotes\")) install.packages(\"remotes\")\npkgs = c(\n    \"sf\",\n    \"tidyverse\",\n    \"here\",\n    \"tmap\"\n)\n\nremotes::install_cran(pkgs)\nsapply(pkgs, require, character.only = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       sf tidyverse      here      tmap \n     TRUE      TRUE      TRUE      TRUE \n```\n\n\n:::\n\n```{.r .cell-code}\nif (!(\"fingertipsR\" %in% installed.packages())){\n  remotes::install_github(\"rOpenSci/fingertipsR\",\n                          build_vignettes = TRUE,\n                          quiet = TRUE)\n}\n\nlibrary(fingertipsR)\n```\n:::\n\n\n\n\nDownloading profile list\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprofile_lst <- profiles()\nhead(profile_lst)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  ProfileID ProfileName       DomainID DomainName                               \n      <int> <chr>                <int> <chr>                                    \n1        18 Smoking Profile 1938132885 Key indicators                           \n2        18 Smoking Profile 1938132886 Smoking prevalence in adults             \n3        18 Smoking Profile 1938132900 Smoking prevalence in priority populatio…\n4        18 Smoking Profile 1938132887 Smoking related mortality                \n5        18 Smoking Profile 1938132888 Smoking related ill health               \n6        18 Smoking Profile 1938132889 Impact of smoking                        \n```\n\n\n:::\n:::\n\n\nIndicator list for Asthma domain (code `8000009`)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nindicator_lst_asthma <- indicators(DomainID = 8000009)\n\nindicator_lst_asthma |>\n  head(10) |> \n  knitr::kable()\n```\n\n::: {.cell-output-display}\n\n\n| IndicatorID|IndicatorName                                                                                                       | DomainID|DomainName | ProfileID|ProfileName         |\n|-----------:|:-------------------------------------------------------------------------------------------------------------------|--------:|:----------|---------:|:-------------------|\n|       90810|Hospital admissions for asthma (under 19 years)                                                                     |  8000009|Asthma     |        29|Respiratory disease |\n|       90933|Asthma: QOF prevalence                                                                                              |  8000009|Asthma     |        29|Respiratory disease |\n|       93573|Emergency hospital admissions for asthma in adults (aged 19 years and over)                                         |  8000009|Asthma     |        29|Respiratory disease |\n|       93594|Median length of stay (days) of emergency admissions to hospital for asthma in adults (aged 19 years and over)      |  8000009|Asthma     |        29|Respiratory disease |\n|       93595|Median length of stay (days) of emergency admissions to hospital for asthma (aged under 19 years)                   |  8000009|Asthma     |        29|Respiratory disease |\n|       93644|Mortality rate from asthma                                                                                          |  8000009|Asthma     |        29|Respiratory disease |\n|       93790|Patients with Asthma: review in the last 12 months (denominator incl. PCAs)                                         |  8000009|Asthma     |        29|Respiratory disease |\n|       93791|Patients with Asthma (6-19 yrs): Second-hand smoking status recorded in the last 12 months (denominator incl. PCAs) |  8000009|Asthma     |        29|Respiratory disease |\n\n\n:::\n:::\n\n\nIndicator list for Respiratory disease (code `29`)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nindicator_lst_resp <- indicators(ProfileID = 29)\n\nindicator_lst_resp |> \n  head(10) |> \n  knitr::kable()\n```\n\n::: {.cell-output-display}\n\n\n| IndicatorID|IndicatorName                                                                  | DomainID|DomainName     | ProfileID|ProfileName         |\n|-----------:|:------------------------------------------------------------------------------|--------:|:--------------|---------:|:-------------------|\n|         253|COPD: QOF prevalence                                                           |  8000003|Key indicators |        29|Respiratory disease |\n|        1204|Mortality rate from chronic obstructive pulmonary disease, all ages            |  8000003|Key indicators |        29|Respiratory disease |\n|       40701|Under 75 mortality rate from respiratory disease                               |  8000003|Key indicators |        29|Respiratory disease |\n|       90810|Hospital admissions for asthma (under 19 years)                                |  8000003|Key indicators |        29|Respiratory disease |\n|       90933|Asthma: QOF prevalence                                                         |  8000003|Key indicators |        29|Respiratory disease |\n|       93573|Emergency hospital admissions for asthma in adults (aged 19 years and over)    |  8000003|Key indicators |        29|Respiratory disease |\n|       93574|Emergency hospital admissions for pneumonia                                    |  8000003|Key indicators |        29|Respiratory disease |\n|       93575|Emergency hospital admissions for respiratory disease                          |  8000003|Key indicators |        29|Respiratory disease |\n|       93576|Emergency hospital admissions for bronchiolitis in children aged under 2 years |  8000003|Key indicators |        29|Respiratory disease |\n|       93577|Emergency hospital admissions for COPD, all ages                               |  8000003|Key indicators |        29|Respiratory disease |\n\n\n:::\n:::\n\n\nSelecting the codes for Respiratory profile\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsel_indicator <- indicator_lst_resp |>\n  pull(IndicatorID) \n```\n:::\n\n\nIndicators are reported for different area types. The next code extracts the area types for each indicator.\n\n\n::: {.cell}\n\n```{.r .cell-code}\narea_avail_ind <- do.call(bind_rows,lapply(sel_indicator,\\(x) indicator_areatypes(IndicatorID = x)))\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\narea_ty_lst <- area_types()\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\narea_avail_ind_names <- area_avail_ind |>\n  left_join(\n    indicator_lst_resp |>\n      select(IndicatorID, IndicatorName) |>\n      unique(),\n    by = join_by(IndicatorID)\n  ) |> \n  left_join(\n    area_ty_lst |> \n      select(AreaTypeID,AreaTypeName) |> \n      unique(),\n    by=join_by(AreaTypeID)\n  )\n\nslice_sample(area_avail_ind_names,n = 15) |>\n  select(-IndicatorID,-AreaTypeID) |>\n  knitr::kable()\n```\n\n::: {.cell-output-display}\n\n\n|IndicatorName                                                                                                       |AreaTypeName                             |\n|:-------------------------------------------------------------------------------------------------------------------|:----------------------------------------|\n|Fuel poverty (low income, low energy efficiency methodology)                                                        |Government Office Region (E12)           |\n|Under 75 mortality rate from respiratory disease considered preventable                                             |ICBs, former STPs                        |\n|High-dose inhaled corticosteroid prescribing                                                                        |Sub-ICB, former CCGs                     |\n|Asthma: QOF prevalence                                                                                              |Government Office Region (E12)           |\n|Mortality rate from pneumonia (underlying cause)                                                                    |Government Office Region (E12)           |\n|Mortality rate from asthma                                                                                          |England                                  |\n|Smoking status at time of delivery                                                                                  |Lower tier local authorities (post 4/23) |\n|Smoking status of patients with certain conditions recorded in the last 12 months (denominator incl. PCAs)          |ICBs, former STPs                        |\n|Emergency hospital admissions for bronchiolitis in children aged under 2 years                                      |Sub-ICB, former CCGs                     |\n|Emergency hospital admissions for bronchiolitis in children aged under 2 years                                      |ICBs, former STPs                        |\n|Air pollution: fine particulate matter (new method - concentrations of total PM2.5)                                 |Government Office Region (E12)           |\n|Smoking status of patients with certain conditions recorded in the last 12 months (denominator incl. PCAs)          |Upper tier local authorities (post 4/23) |\n|Patients with Asthma (6-19 yrs): Second-hand smoking status recorded in the last 12 months (denominator incl. PCAs) |General Practice                         |\n|Hospital admissions for asthma (under 19 years)                                                                     |Upper tier local authorities (4/20-3/21) |\n|Fuel poverty (low income, low energy efficiency methodology)                                                        |England                                  |\n\n\n:::\n:::\n\n\nData for one indicator of the Respiratory profile\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntemp_data <- fingertips_data(\n  IndicatorID = area_avail_ind$IndicatorID[1],\n  AreaTypeID = area_avail_ind$AreaTypeID[1]\n  )\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Code from vignette \ncols <- c(\"IndicatorID\", \"AreaCode\", \"ParentName\", \"Sex\", \"Timeperiod\", \"Value\")\n\narea_type_name <- table(temp_data$AreaType) # tally each group in the AreaType field\n\narea_type_name <- area_type_name[area_type_name == max(area_type_name)] # pick the group with the highest frequency\narea_type_name <- names(area_type_name) # retrieve the name\n\nset.seed(1234)\nsamp_areas <- sample(temp_data$AreaCode |> unique(),5)\n\n\ndata <- temp_data[temp_data$AreaType == area_type_name & temp_data$AreaCode %in% samp_areas,\n                  cols]\n```\n:::\n\n\n\nWe are going to show the historic data for five areas of type Counties & UAs (from Apr 2023)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data,aes(x = Timeperiod,y = Value, col = AreaCode ,group = AreaCode))+\n  geom_line()+\n  labs(title = area_avail_ind_names$IndicatorName[1],subtitle = paste0(\"Showning a sample of \", area_type_name))+\n  theme(axis.text.x = element_text(angle = 90))\n```\n\n::: {.cell-output-display}\n![](fingertips_data_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n## Compiling a list of indicators from the Respiratory and Asthma domain that are available for lower and upper tier LA\n\n\n::: {.cell}\n\n```{.r .cell-code}\nindicator_lst_all <- bind_rows(indicator_lst_resp,indicator_lst_asthma)\n\nsel_indicator_all <- indicator_lst_all |> pull(IndicatorID) |> unique()\n```\n:::\n\n\nThe following code will extract the indicators that are available for lower/upper LA\n\n\n::: {.cell}\n\n```{.r .cell-code}\narea_avail_ind_all <- do.call(bind_rows,lapply(sel_indicator_all,\\(x) indicator_areatypes(IndicatorID = x)))\n\nLA_ind_names_all <- area_avail_ind_all |>\n  left_join(\n    indicator_lst_all |>\n      select(IndicatorID, IndicatorName) |>\n      unique(),\n    by = join_by(IndicatorID)\n  ) |> \n  left_join(\n    area_ty_lst |> \n      select(AreaTypeID,AreaTypeName) |> \n      unique(),\n    by=join_by(AreaTypeID)\n  ) |> \n  filter(str_detect(AreaTypeName,pattern = \"(Upper|Lower|Practice|Sub-ICB)\"))\n```\n:::\n\n\n",
    "supporting": [
      "fingertips_data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}