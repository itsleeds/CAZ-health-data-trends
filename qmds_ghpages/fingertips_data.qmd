---
title: "fingertips_data"
format: html
---

## Overview

This section accesses and analyses public health data from NHS Digital's Fingertips platform. Fingertips provides a comprehensive collection of health indicators at various geographic levels, making it an invaluable resource for understanding population health patterns.

For this CAZ health analysis, we focus particularly on respiratory health indicators including:

- **Asthma prevalence**: Recorded prevalence of asthma in different age groups
- **Hospital admissions**: Emergency admissions for respiratory conditions
- **Air quality measures**: Local pollution levels and monitoring data
- **Mortality indicators**: Deaths attributable to respiratory diseases

The Fingertips API allows us to access standardized health indicators that can be compared across different geographic areas and time periods. This provides important contextual information for understanding the baseline health status of populations in CAZ areas compared to control areas.

By combining Fingertips data with our prescription analysis, we can build a more complete picture of respiratory health trends and validate our findings against established public health surveillance systems.

```{r}
#| label: packages
#| message: false

options(repos = c(CRAN = "https://cloud.r-project.org"))
if (!require("remotes")) install.packages("remotes")
pkgs = c(
    "sf",
    "tidyverse",
    "here",
    "tmap"
)

remotes::install_cran(pkgs)
sapply(pkgs, require, character.only = TRUE)

if (!("fingertipsR" %in% installed.packages())){
  remotes::install_github("rOpenSci/fingertipsR",
                          build_vignettes = TRUE,
                          quiet = TRUE)
}

library(fingertipsR)
```



Downloading profile list

```{r}
profile_lst <- profiles()
head(profile_lst)
```

Indicator list for Asthma domain (code `8000009`)

```{r}
indicator_lst_asthma <- indicators(DomainID = 8000009)

indicator_lst_asthma |>
  head(10) |> 
  knitr::kable()
```

Indicator list for Respiratory disease (code `29`)

```{r}
indicator_lst_resp <- indicators(ProfileID = 29)

indicator_lst_resp |> 
  head(10) |> 
  knitr::kable()
```

Selecting the codes for Respiratory profile

```{r}
sel_indicator <- indicator_lst_resp |>
  pull(IndicatorID) 
```

Indicators are reported for different area types. The next code extracts the area types for each indicator.

```{r}
area_avail_ind <- do.call(bind_rows,lapply(sel_indicator,\(x) indicator_areatypes(IndicatorID = x)))
```

```{r}
area_ty_lst <- area_types()
```

```{r}
area_avail_ind_names <- area_avail_ind |>
  left_join(
    indicator_lst_resp |>
      select(IndicatorID, IndicatorName) |>
      unique(),
    by = join_by(IndicatorID)
  ) |> 
  left_join(
    area_ty_lst |> 
      select(AreaTypeID,AreaTypeName) |> 
      unique(),
    by=join_by(AreaTypeID)
  )

slice_sample(area_avail_ind_names,n = 15) |>
  select(-IndicatorID,-AreaTypeID) |>
  knitr::kable()
```

Data for one indicator of the Respiratory profile

```{r}
temp_data <- fingertips_data(
  IndicatorID = area_avail_ind$IndicatorID[1],
  AreaTypeID = area_avail_ind$AreaTypeID[1]
  )

```

```{r}
# Code from vignette 
cols <- c("IndicatorID", "AreaCode", "ParentName", "Sex", "Timeperiod", "Value")

area_type_name <- table(temp_data$AreaType) # tally each group in the AreaType field

area_type_name <- area_type_name[area_type_name == max(area_type_name)] # pick the group with the highest frequency
area_type_name <- names(area_type_name) # retrieve the name

set.seed(1234)
samp_areas <- sample(temp_data$AreaCode |> unique(),5)


data <- temp_data[temp_data$AreaType == area_type_name & temp_data$AreaCode %in% samp_areas,
                  cols]
```


We are going to show the historic data for five areas of type `r area_type_name`

```{r}
ggplot(data,aes(x = Timeperiod,y = Value, col = AreaCode ,group = AreaCode))+
  geom_line()+
  labs(title = area_avail_ind_names$IndicatorName[1],subtitle = paste0("Showning a sample of ", area_type_name))+
  theme(axis.text.x = element_text(angle = 90))
```

## Compiling a list of indicators from the Respiratory and Asthma domain that are available for lower and upper tier LA

```{r}
indicator_lst_all <- bind_rows(indicator_lst_resp,indicator_lst_asthma)

sel_indicator_all <- indicator_lst_all |> pull(IndicatorID) |> unique()
```

The following code will extract the indicators that are available for lower/upper LA

```{r}
area_avail_ind_all <- do.call(bind_rows,lapply(sel_indicator_all,\(x) indicator_areatypes(IndicatorID = x)))

LA_ind_names_all <- area_avail_ind_all |>
  left_join(
    indicator_lst_all |>
      select(IndicatorID, IndicatorName) |>
      unique(),
    by = join_by(IndicatorID)
  ) |> 
  left_join(
    area_ty_lst |> 
      select(AreaTypeID,AreaTypeName) |> 
      unique(),
    by=join_by(AreaTypeID)
  ) |> 
  filter(str_detect(AreaTypeName,pattern = "(Upper|Lower|Practice|Sub-ICB)"))
```

